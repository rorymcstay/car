[[inputs.logparser]]
  ## file(s) to tail:
  files = ["/var/log/car_app/market.log"]

  from_beginning = false
  [inputs.logparser.grok]
    custom_pattern_files = ["/etc/telegraf/patterns.conf"]
    patterns = ["%{BASE}%{PAGE_SIZE}"]
    measurement = "%{}"

[[inputs.logparser]]
  files = ["/var/log/car_app/market.log"]
  from_beginning = false

  [inputs.logparser.grok]
    custom_pattern_files = ["/etc/telegraf/patterns.conf"]
    patterns = ["%{BASE}%{M_COLLECTED}"]
    measurement = "collected"

[[inputs.logparser]]
  files = ["/var/log/car_app/worker.log"]
  from_beginning = false

  [inputs.logparser.grok]
    custom_pattern_files = ["/etc/telegraf/patterns.conf"]
    patterns = ["%{BASE}%{W_COLLECTED}"]
    measurement = "w_collected"

[[inputs.logparser]]
  ## file(s) to tail:
  files = ["/var/log/car_app/worker.log"]
  from_beginning = false

  [inputs.logparser.grok]
    patterns = ["%{BASE}%{PARSED}"]
    measurement = "parsed"
    custom_pattern_files = ["/etc/telegraf/patterns.conf"]

[[inputs.logparser]]
  ## file(s) to tail:
  files = ["/var/log/car_app/worker.log"]
  from_beginning = false

  [inputs.logparser.grok]
    custom_pattern_files = ["/etc/telegraf/patterns.conf"]
    patterns = ["%{BASE}%{SCRAPED}"]
    measurement = "scraped"

[[outputs.influxdb]]
  ## The full HTTP or UDP endpoint URL for your InfluxDB instance.
  urls = ["http://influxdb:8086"]
  ## The target database for metrics (telegraf will create it if not exists).
  database = "telegraf" # required
  ## Write timeout (for the InfluxDB client), formatted as a string.
  timeout = "5s"
  username = "root"
  password = "root"

[[outputs.file]]
  files = ["stdout"]
# *.*\* : p
#https://github.com/influxdata/telegraf/tree/master/plugins/inputs/logparser
#https://www.elastic.co/guide/en/logstash/current/plugins-filters-grok.html
